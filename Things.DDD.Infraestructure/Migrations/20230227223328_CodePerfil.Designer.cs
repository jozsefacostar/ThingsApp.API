// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Things.DDD.Infrastructure;

namespace Things.DDD.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230227223328_CodePerfil")]
    partial class CodePerfil
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Things.DDD.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInitial")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finalized")
                        .HasColumnType("bit");

                    b.Property<int>("GoalsA")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<int>("GoalsB")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TeamA")
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamB")
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TeamA");

                    b.HasIndex("TeamB");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.Profile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.RecordBet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GoalsA")
                        .HasColumnType("int");

                    b.Property<int>("GoalsB")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SessionBet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("SessionBet");

                    b.HasIndex("User");

                    b.ToTable("RecordBets");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.SessionBet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Game")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Game");

                    b.ToTable("SessionBets");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.Team", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("Loggued")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Profile")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("Profile");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.Game", b =>
                {
                    b.HasOne("Things.DDD.Domain.Entities.Team", "TeamANavigation")
                        .WithMany("TeamsA")
                        .HasForeignKey("TeamA")
                        .HasConstraintName("FK_Game_TeamA")
                        .IsRequired();

                    b.HasOne("Things.DDD.Domain.Entities.Team", "TeamBNavigation")
                        .WithMany("TeamsB")
                        .HasForeignKey("TeamB")
                        .HasConstraintName("FK_Game_TeamB")
                        .IsRequired();

                    b.Navigation("TeamANavigation");

                    b.Navigation("TeamBNavigation");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.RecordBet", b =>
                {
                    b.HasOne("Things.DDD.Domain.Entities.SessionBet", "SessionBetNavigation")
                        .WithMany("RecordBets")
                        .HasForeignKey("SessionBet")
                        .HasConstraintName("FK_RecordBet_BetSesion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Things.DDD.Domain.Entities.User", "UserNavigation")
                        .WithMany("RecordBets")
                        .HasForeignKey("User")
                        .HasConstraintName("FK_RecordBet_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionBetNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.SessionBet", b =>
                {
                    b.HasOne("Things.DDD.Domain.Entities.Game", "GameNavigation")
                        .WithMany("SessionBets")
                        .HasForeignKey("Game")
                        .HasConstraintName("FK_SessionBet_Game")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameNavigation");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.User", b =>
                {
                    b.HasOne("Things.DDD.Domain.Entities.Profile", "ProfileNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Profile")
                        .HasConstraintName("FK_User_Profile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileNavigation");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.Game", b =>
                {
                    b.Navigation("SessionBets");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.Profile", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.SessionBet", b =>
                {
                    b.Navigation("RecordBets");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.Team", b =>
                {
                    b.Navigation("TeamsA");

                    b.Navigation("TeamsB");
                });

            modelBuilder.Entity("Things.DDD.Domain.Entities.User", b =>
                {
                    b.Navigation("RecordBets");
                });
#pragma warning restore 612, 618
        }
    }
}
